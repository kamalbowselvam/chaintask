name: Deploy to AWS

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:

    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Check out code into the repository 
      uses: actions/checkout@v3

    - name: Install kubecontrol
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.1' # default is latest stable
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::402744909175:role/GitHubAction-AssumeRoleWithAction
        aws-region: eu-west-3
   
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Load secrets and save to app.env
      run: aws secretsmanager get-secret-value --secret-id chain_task_secret --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]'  > app.env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: chain_task
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
        docker push -a $REGISTRY/$REPOSITORY

    - name: Update kube config and identity
      run: |
        aws sts get-caller-identity
        aws eks update-kubeconfig --name chain-task --region eu-west-3

    - name: Deploy images to Amazon EKS 
      run: |
        kubectl apply -f eks/aws-auth.yaml
        kubectl apply -f eks/deployment.yaml
        kubectl apply -f eks/service.yaml
        kubectl apply -f eks/ingress.yaml

